// This config is in the KDL format: https://kdl.dev
// https://yalter.github.io/niri/Configuration:-Introduction

spawn-sh-at-startup "killall waybar || waybar -c $HOME/.config/niri/waybar/config.jsonc -s $HOME/.config/niri/waybar/style.css & hyprpaper"

input {
    keyboard {
        xkb {
            // You can set rules, model, layout, variant and options.

            // For example:
            // options "grp:win_space_toggle,compose:ralt,ctrl:nocaps"
        }
    }

    touchpad {
        tap
        // dwt
        // dwtp
        // drag false
        // drag-lock
        natural-scroll
        // scroll-method "two-finger"
        // disabled-on-external-mouse
    }

    mouse {
        // off
        // natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
    }

    warp-mouse-to-focus
    // focus-follows-mouse max-scroll-amount="0%" // scroll part makes only work for fully on screen windows
}

// likely make another script for this
// `niri msg outputs`
// The built-in laptop monitor is usually called "eDP-1".
// https://yalter.github.io/niri/Configuration:-Outputs
// Remember to uncomment the node by removing "/-"!
/-output "eDP-1" {
    // off

    // The format is "<width>x<height>" or "<width>x<height>@<refresh rate>".
    mode "1920x1080@120.030"

    scale 2

    // Transform allows to rotate the output counter-clockwise, valid values are:
    // normal, 90, 180, 270, flipped, flipped-90, flipped-180 and flipped-270.
    transform "normal"

    // Position of the output in the global coordinate space.
    // For example, a 3840×2160 output with scale 2.0 will have a logical size of 1920×1080,
    // so to put another output directly adjacent to it on the right, set its x to 1920.
    position x=1280 y=0
}

layout {
    gaps 16

    center-focused-column "never"

    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
    }

    // preset-window-heights { }

    // default-column-width { proportion 0.5; }
    // If you leave the brackets empty, the windows themselves will decide their initial width.

    border {
        width 2
        active-color "#ffc87f"
        inactive-color "#505050"
        urgent-color "#9b0000"

        // Gradients can use a few different interpolation color spaces.
        // For example, this is a pastel rainbow gradient via in="oklch longer hue".
        //
        // active-gradient from="#e5989b" to="#ffb4a2" angle=45 relative-to="workspace-view" in="oklch longer hue"
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }

    shadow {
        //on
        draw-behind-window true
        softness 30
        spread 5
        offset x=0 y=5
        color "#0007"
    }

    // Struts shrink the area occupied by windows, similarly to layer-shell panels.
    // Left and right struts will cause the next window to the side to always be visible.
    struts {
        // left 64
    }
}
prefer-no-csd
window-rule {
    geometry-corner-radius 12
    clip-to-geometry true
	draw-border-with-background false
}

hotkey-overlay {
    skip-at-startup
}

screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"
// screenshot-path null

// https://yalter.github.io/niri/Configuration:-Animations
animations {
    // off
    // slowdown 3.0
}

// https://yalter.github.io/niri/Configuration:-Window-Rules
window-rule {
	// regex to help with specificity
    match app-id=r#"^org\.wezfurlong\.wezterm$"#
    default-column-width {}
}

window-rule {
    match app-id=r#"firefox$"# title="^Picture-in-Picture$"
    open-floating true
}

/-window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#
    block-out-from "screen-capture"
    block-out-from "screencast"
}

binds {
    Mod+Shift+Slash { show-hotkey-overlay; } // aslo Mod+?

    Mod+Enter hotkey-overlay-title="Open a Terminal: alacritty" { spawn "alacritty"; }
    Mod+D hotkey-overlay-title="Run an Application: rofi" { spawn "rofi"; }
    Mod+Ctrl+Enter hotkey-overlay-title="Open a Browser: firefox" { spawn "firefox"; }

    // The allow-when-locked=true property makes them work even when the session is locked.
    XF86AudioRaiseVolume allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1-"; }
    XF86AudioMute        allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle"; }

    // You can use regular spawn with multiple arguments too (to avoid going through "sh"),
    // but you need to manually put each argument in separate "" quotes.
    XF86MonBrightnessUp allow-when-locked=true { spawn "brightnessctl" "--class=backlight" "set" "+10%"; }
    XF86MonBrightnessDown allow-when-locked=true { spawn "brightnessctl" "--class=backlight" "set" "10%-"; }

    // You can also move the mouse into the top-left hot corner, // remove this
    // or do a four-finger swipe up on a touchpad.
    Mod+Tab repeat=false { toggle-overview; }

    Mod+Q repeat=false { close-window; }

    Mod+H     { focus-column-left; }
    Mod+J     { focus-window-or-workspace-down; }
    Mod+K     { focus-window-or-workspace-up; }
    Mod+L     { focus-column-right; }

    Mod+Ctrl+H     { move-column-left; }
    Mod+Ctrl+J     { move-window-down-or-to-workspace-down; }
    Mod+Ctrl+K     { move-window-up-or-to-workspace-up; }
    Mod+Ctrl+L     { move-column-right; }

    Mod+Comma      { focus-workspace-down; }
    Mod+Period     { focus-workspace-up; }
    Mod+Ctrl+Comma         { move-workspace-down; }
    Mod+Ctrl+Period         { move-workspace-up; }

    Mod+Alt+H  { consume-or-expel-window-left; }
    Mod+Alt+L  { consume-or-expel-window-right; }

    Mod+S+H     { focus-monitor-left; }
    Mod+S+J     { focus-monitor-down; }
    Mod+S+K     { focus-monitor-up; }
    Mod+S+L     { focus-monitor-right; }

    Mod+S+Ctrl+H     { move-column-to-monitor-left; }
    Mod+S+Ctrl+J     { move-column-to-monitor-down; }
    Mod+S+Ctrl+K     { move-column-to-monitor-up; }
    Mod+S+Ctrl+L     { move-column-to-monitor-right; }

    Mod+S+Ctrl+H     { move-workspace-to-monitor-left; }
    Mod+S+Ctrl+J     { move-workspace-to-monitor-down; }
    Mod+S+Ctrl+K     { move-workspace-to-monitor-up; }
    Mod+S+Ctrl+L     { move-workspace-to-monitor-right; }

    Mod+U              { focus-workspace-down; }
    Mod+I              { focus-workspace-up; }
    Mod+Ctrl+U         { move-column-to-workspace-down; }
    Mod+Ctrl+I         { move-column-to-workspace-up; }

    // Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    // Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    // Mod+TouchpadScrollDown { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.02+"; }
    // Mod+TouchpadScrollUp   { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.02-"; }

	// may remove these
    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Ctrl+1 { move-column-to-workspace 1; }
    Mod+Ctrl+2 { move-column-to-workspace 2; }
    Mod+Ctrl+3 { move-column-to-workspace 3; }
    Mod+Ctrl+4 { move-column-to-workspace 4; }
    Mod+Ctrl+5 { move-column-to-workspace 5; }
    Mod+Ctrl+6 { move-column-to-workspace 6; }
    Mod+Ctrl+7 { move-column-to-workspace 7; }
    Mod+Ctrl+8 { move-column-to-workspace 8; }
    Mod+Ctrl+9 { move-column-to-workspace 9; }

    Mod+P { focus-workspace-previous; }

    Mod+F { maximize-column; }
    Mod+Ctrl+F { fullscreen-window; }

    // Expand the focused column to space not taken up by other fully visible columns.
    // Makes the column "fill the rest of the space".
    // Mod+Ctrl+F { expand-column-to-available-width; }

    Mod+C { center-column; }

    Mod+Ctrl+C { center-visible-columns; }

    Mod+R { switch-preset-column-width; }
    Mod+Ctrl+R { switch-preset-window-height; }

    Mod+R+H { set-column-width "-20%"; }
    Mod+R+L { set-column-width "+20%"; }
    Mod+R+J { set-window-height "-20%"; }
    Mod+R+K { set-window-height "+20%"; }

    Mod+V       { toggle-window-floating; }
    Mod+Shift+V { switch-focus-between-floating-and-tiling; }

    Mod+T { toggle-column-tabbed-display; }

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

	// Escape hatch for key captures.
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    Mod+Ctrl+Q { quit; }
    Ctrl+Alt+Delete { quit; }

    // Mod+Shift+P { power-off-monitors; }
}
